version: '3'
services:
    tododb:
        container_name: tododb
        image: 'mariadb'
        restart: 'on-failure'
        command: --init-file /demo.init.sql
        volumes:
            - $PWD/demo.init.sql:/demo.init.sql
        environment:              
            MYSQL_ROOT_PASSWORD: 'password'
            MYSQL_DATABASE: 'tododb'
            MYSQL_USER: 'appuser'
            MYSQL_PASSWORD: 'password'
            MYSQL_ROOT_HOST: '%'
        networks: ['backend']
        ports:
            - '3307:3306'
    userdb:
        container_name: userdb
        image: 'mysql'
        restart: 'on-failure'
        deploy:
            resources:
              limits:
                cpus: '5.0'
                memory: '512m'
              reservations:
                cpus: '0.1'
                memory: '100m'
        command: --init-file /user.init.sql
        volumes:
            - $PWD/user.init.sql:/user.init.sql
        environment:
            MYSQL_ROOT_PASSWORD: 'password'
            MYSQL_DATABASE: 'userdb'
            MYSQL_USER: 'appuser'
            MYSQL_PASSWORD: 'password'
            MYSQL_ROOT_HOST: '%'
        networks: [ 'backend' ]
        ports:
            - '3308:3306'
    postgres:
        container_name: authdb
        image: postgres
        deploy:
            resources:
                limits:
                    cpus: '5.0'
                    memory: '1024m'
                reservations:
                    cpus: '0.1'
                    memory: '256m'
        environment:
            POSTGRES_DB: keycloak
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: password
        ports:
            - '5521:5432'
#if have db then use this
#    mongoldb:
#        container_name: userdb
#        image: 'mysql'
#        restart: 'on-failure'
#        deploy:
#            resources:
#                limits:
#                    cpus: '1.0'
#                    memory: '512m'
#                reservations:
#                    cpus: '0.1'
#                    memory: '100m'
#        command: --init-file /user.init.sql
#        volumes:
#            - $PWD/user.init.sql:/user.init.sql
#        environment:
#            MYSQL_ROOT_PASSWORD: 'password'
#            MYSQL_DATABASE: 'userdb'
#            MYSQL_USER: 'appuser'
#            MYSQL_PASSWORD: 'password'
#            MYSQL_ROOT_HOST: '%'
#        networks: [ 'backend' ]
#        ports:
#            - '3309:3306'






#    demotodo:
#        depends_on:
#            - 'tododb'
#        build: ./demo.spring.rx/.
#        networks: ['backend']
#        ports:
#            - '8082:8082'
networks:
    backend:
        driver: 'bridge'